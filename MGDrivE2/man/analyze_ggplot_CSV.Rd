% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auxiliary-analysis.R
\name{analyze_ggplot_CSV}
\alias{analyze_ggplot_CSV}
\title{Plotting and Basic Metrics for ggplot2}
\usage{
analyze_ggplot_CSV(
  read_dir,
  write_dir = read_dir,
  sex = "both",
  patch_agg = FALSE,
  goi = NULL,
  drop_zero_goi = TRUE
)
}
\arguments{
\item{read_dir}{directory with repetition directories in it}

\item{write_dir}{directory to build output directory, default is \code{read_dir}}

\item{sex}{string dictating how to handle male/female data}

\item{patch_agg}{boolean, should patches be aggregated, default is \code{FALSE}}

\item{goi}{named list dictating "genotypes-of-interest", default is NULL}

\item{drop_zero_goi}{boolean, should genotypes with zero counts be dropped, default is \code{TRUE}}
}
\value{
Builds an analysis directory within \code{write_dir} with three files:
\itemize{
 \item params.txt: Text file listing the parameters used for the analysis
 \item plot.csv: Comma-separated file of simulation data in long-form for ggplot2
 \item metrics.csv: Comma-separated file of some basic metrics in long-form for ggplot2
}
}
\description{
This function is designed to read in all output from one parameter set and
then output ggplot-friendly raw data and simple metrics. The raw data maintains
the repetition, sex, patch, simulation time, and genotype labels. The metrics are
calculated over repetitions and thus maintain sex, patch, simulation time, and
genotype labels.
}
\details{
This function is generic to \code{MGDrivE} - working on both V1 and V2. Because
of this, it has some assumptions about how the data is organized:
\itemize{
 \item read_dir
 \itemize{
        \item repetition 1
        \itemize{
               \item M_[patch1].csv
               \item M_[patch2].csv
               \item F_[patch1].csv
               \item F_[patch2].csv
               \item ...
        }
        \item repetition 2
        \itemize{
               \item M_[patch1].csv
               \item M_[patch2].csv
               \item F_[patch1].csv
               \item F_[patch2].csv
               \item ...
        }
        \item repetition 3
        \item ...
 }
}

This function requires V2 data to be output in V1 format. It will ignore aquatic
stages if present. Because of the different way that patches are labeled between
versions, it cannot find/check the patches through string manipulation. Therefore,
it assumes the shape of the directories and checks that, which indirectly checks
the patches, but does not directly check them for correctness or order.

Since V1 and V2 use different parameters, and we may be working on data from either,
this function reads in an example file to get simulation parameters and check
genotypes against.

\code{write_dir} defaults to the read directory, placing the analysis with
the repeititon data. If this is not desired, the user must build their own
\code{write_dir} and supply it to the function.

\code{sex} provides the user options on how to handle the male and female
data. There are 4 options:
\itemize{
 \item \code{both}: This reads and keeps male and female data. It is the default
 behavior.
 \item \code{m} or \code{male}: only analyzes male data. It does not read in female
 data or analyze it at all.
 \item \code{f} or \code{female}: only analyzes female data. Does not read or
 analyze male files.
 \item \code{agg}: This reads in both male and female data, but then aggregates
 it, so that full population data remains.
}

\code{goi} can be ignored or provided as a named list. This allows the user to
aggregate genotypes, or alleles, in any desired fashion. The default value, \code{NULL},
assumes no aggregate or renaming, so all genotypes are used and kept separate.
When specific analysis are desired, the input is a named list, e.g.
\code{goi=list("A"=c(geno1, geno2), "B"=c(geno1, geno3))}. The list names are
returned in the output and can be whatever the user would like to plot. The
genotypes within the list must correspond to genotypes in the data and are checked
for consistency. This function aggregates the data counts, so if one wishes to
do allele frequencies, the genotypes can be duplicated as many times as required
(e.g., a diploid would need them duplicated twice, triploid three times, etc.).
There is no "total" provided by this function - if a "total" count is desired,
then the \code{goi} list must contain \code{goi=list(..."total"=c(all genotypes listed))}.
}
